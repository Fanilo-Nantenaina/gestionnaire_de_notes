class Humanitarian {
  final String id;
  final String name;
  final String icon;
  final String description;
  final String category;
  final List<TemplateField> fields;

  Humanitarian({
    required this.id,
    required this.name,
    required this.icon,
    required this.description,
    required this.category,
    required this.fields,
  });

  static List<Humanitarian> getAllTemplates() {
    return [
      Humanitarian(
        id: 'food_need',
        name: 'Besoin Alimentaire',
        icon: 'üçΩÔ∏è',
        description: 'Fiche pour documenter les besoins alimentaires',
        category: 'humanitarian',
        fields: [
          TemplateField(label: 'Nom du b√©n√©ficiaire', type: FieldType.text, required: true),
          TemplateField(label: 'Village/Localit√©', type: FieldType.text, required: true),
          TemplateField(label: 'Nombre de personnes', type: FieldType.number, required: true),
          TemplateField(label: 'Nombre d\'enfants', type: FieldType.number),
          TemplateField(label: 'Type de besoin', type: FieldType.multiChoice,
              options: ['Riz', 'Ma√Øs', 'Huile', 'Sucre', 'Sel', 'Lait', 'Autre']),
          TemplateField(label: 'Quantit√© estim√©e (kg)', type: FieldType.number),
          TemplateField(label: 'Urgence', type: FieldType.choice,
              options: ['Faible', 'Moyenne', '√âlev√©e', 'Critique']),
          TemplateField(label: 'Date de la demande', type: FieldType.date, required: true),
          TemplateField(label: 'Contact', type: FieldType.text),
          TemplateField(label: 'Observations', type: FieldType.textarea),
        ],
      ),

      Humanitarian(
        id: 'medical_need',
        name: 'Besoin M√©dical',
        icon: 'üè•',
        description: 'Fiche pour documenter les besoins m√©dicaux',
        category: 'humanitarian',
        fields: [
          TemplateField(label: 'Nom du patient', type: FieldType.text, required: true),
          TemplateField(label: '√Çge', type: FieldType.number, required: true),
          TemplateField(label: 'Sexe', type: FieldType.choice,
              options: ['Masculin', 'F√©minin']),
          TemplateField(label: 'Village/Localit√©', type: FieldType.text, required: true),
          TemplateField(label: 'Type de besoin', type: FieldType.multiChoice,
              options: ['Consultation', 'M√©dicaments', 'Hospitalisation', 'Transport', 'Chirurgie', 'Autre']),
          TemplateField(label: 'Sympt√¥mes principaux', type: FieldType.textarea, required: true),
          TemplateField(label: 'Urgence', type: FieldType.choice,
              options: ['Faible', 'Moyenne', '√âlev√©e', 'Critique']),
          TemplateField(label: 'Date de la demande', type: FieldType.date, required: true),
          TemplateField(label: 'Contact famille', type: FieldType.text),
          TemplateField(label: 'Observations m√©dicales', type: FieldType.textarea),
        ],
      ),

      Humanitarian(
        id: 'aid_report',
        name: 'Rapport d\'Aide',
        icon: 'üìã',
        description: 'Rapport de distribution d\'aide humanitaire',
        category: 'humanitarian',
        fields: [
          TemplateField(label: 'Nom du b√©n√©ficiaire', type: FieldType.text, required: true),
          TemplateField(label: 'Village/Localit√©', type: FieldType.text, required: true),
          TemplateField(label: 'Type d\'aide re√ßue', type: FieldType.multiChoice,
              options: ['Alimentaire', 'M√©dicale', 'Financi√®re', 'Mat√©riel', '√âducation', 'Autre']),
          TemplateField(label: 'Description de l\'aide', type: FieldType.textarea, required: true),
          TemplateField(label: 'Quantit√©/Montant', type: FieldType.text),
          TemplateField(label: 'Date de distribution', type: FieldType.date, required: true),
          TemplateField(label: 'Organisation donatrice', type: FieldType.text),
          TemplateField(label: 'Agent distributeur', type: FieldType.text),
          TemplateField(label: 'Signature/Confirmation', type: FieldType.text),
          TemplateField(label: 'Observations', type: FieldType.textarea),
        ],
      ),

      Humanitarian(
        id: 'needs_assessment',
        name: '√âvaluation des Besoins',
        icon: 'üìä',
        description: '√âvaluation g√©n√©rale des besoins d\'une communaut√©',
        category: 'humanitarian',
        fields: [
          TemplateField(label: 'Village/Communaut√©', type: FieldType.text, required: true),
          TemplateField(label: 'Population estim√©e', type: FieldType.number),
          TemplateField(label: 'Date d\'√©valuation', type: FieldType.date, required: true),
          TemplateField(label: 'Besoins prioritaires', type: FieldType.multiChoice,
              options: ['Eau', 'Nourriture', 'Sant√©', 'Abri', '√âducation', 'Protection', 'Autre']),
          TemplateField(label: 'Situation alimentaire', type: FieldType.choice,
              options: ['Bonne', 'Acceptable', 'Pr√©occupante', 'Critique']),
          TemplateField(label: 'Acc√®s √† l\'eau potable', type: FieldType.choice,
              options: ['Bon', 'Limit√©', 'Tr√®s limit√©', 'Aucun']),
          TemplateField(label: 'Acc√®s aux soins', type: FieldType.choice,
              options: ['Bon', 'Limit√©', 'Tr√®s limit√©', 'Aucun']),
          TemplateField(label: 'Personnes vuln√©rables', type: FieldType.textarea),
          TemplateField(label: 'Recommandations', type: FieldType.textarea, required: true),
          TemplateField(label: '√âvaluateur', type: FieldType.text),
        ],
      ),
    ];
  }

  static Humanitarian? getTemplateById(String id) {
    try {
      return getAllTemplates().firstWhere((t) => t.id == id);
    } catch (e) {
      return null;
    }
  }

  String generateContent(Map<String, dynamic> values) {
    final buffer = StringBuffer();
    buffer.writeln('=== $name ===\n');

    for (final field in fields) {
      final value = values[field.label];
      if (value != null && value.toString().isNotEmpty) {
        buffer.writeln('${field.label}: $value');
      }
    }

    buffer.writeln('\n--- G√©n√©r√© le ${DateTime.now().day}/${DateTime.now().month}/${DateTime.now().year} ---');
    return buffer.toString();
  }
}

class TemplateField {
  final String label;
  final FieldType type;
  final bool required;
  final List<String>? options;

  TemplateField({
    required this.label,
    required this.type,
    this.required = false,
    this.options,
  });
}

enum FieldType {
  text,
  textarea,
  number,
  date,
  choice,
  multiChoice,
}
